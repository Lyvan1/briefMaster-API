<?php

namespace ContainerK9PXoPY;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCompanyCreationStateProcessorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\State\CompanyCreationStateProcessor' shared autowired service.
     *
     * @return \App\State\CompanyCreationStateProcessor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/core/src/State/ProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/src/State/CompanyCreationStateProcessor.php';
        include_once \dirname(__DIR__, 4).'/src/Service/MailCompanySubscription.php';

        $a = ($container->privates['mailer.mailer'] ?? $container->load('getMailer_MailerService'));

        if (isset($container->privates['App\\State\\CompanyCreationStateProcessor'])) {
            return $container->privates['App\\State\\CompanyCreationStateProcessor'];
        }

        return $container->privates['App\\State\\CompanyCreationStateProcessor'] = new \App\State\CompanyCreationStateProcessor(($container->privates['api_platform.doctrine.orm.state.persist_processor'] ?? $container->load('getApiPlatform_Doctrine_Orm_State_PersistProcessorService')), ($container->privates['App\\Repository\\UserRepository'] ?? self::getUserRepositoryService($container)), ($container->privates['App\\Repository\\UsersRoleRepository'] ?? $container->load('getUsersRoleRepositoryService')), new \App\Service\MailCompanySubscription($a, ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container))));
    }
}
